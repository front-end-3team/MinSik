

1. FLUX 패턴에 대하여 설명해보세요
    - 프로그램의 예측가능성을 높이기 위해 사용한다(기존의 MVC 패턴과 달리 의존성과 복잡성을 줄인다)
    - 사용자 입력을 기반으로 ACTION을 만들고 DISPATCH에 전달하여 STORE의 데이터로 변경한 뒤 VIEW에 반영하는 단방향 아키텍쳐

2. 아래의 hook 함수는 각각 어느 순간에 사용할까요
    (1) useReducer : 관리할 상태가 많다면 컴포넌트와 로직을 분리하고 한 곳에 모아서 의존성을 줄이고 유지 보수가 용이하다
    (2) useContext : props를 통해 데이터를 전달하지 않고 context를 통해 공유하기에 최상단에서 최하단으로 쉽게 데이터 전달이 가능하다

3. 전역 상태 관리를 해야하는 이유는 무엇일까요
    - 애플리케이션 규모가 커질수록 컴포넌트가 늘어남에 따라 전달되는 props나 선언되는 state가 많아질 수 밖에 없고 컴포넌트끼리 
      관계가 깊어질수록 props drilling이 일어나 불필요한 데이터를 받는다. 전역 상태 관리를 통하여 데이터 추적을 쉽게 할 수 있고
      렌더링과 메모리 사용을 최적화할 수 있다.
      
4. 그렇다면 전역 상태 관리는 위 조건에만 부합하면 반드시 수행하는 것이 좋을까요?
   전역 상태 관리를 통해 얻을 수 있는 장단점에 관하여 토의해보세