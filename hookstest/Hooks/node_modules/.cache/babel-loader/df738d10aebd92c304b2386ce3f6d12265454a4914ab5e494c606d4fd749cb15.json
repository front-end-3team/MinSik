{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimmi\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\frontJS\\\\hookstest\\\\Hooks\\\\src\\\\components\\\\2.state\\\\comment.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Comment(_ref) {\n  _s();\n  let {\n    Comments,\n    onRemoveComment,\n    onStartEdit\n  } = _ref;\n  const [isEdit, setIsEdit] = useState(false);\n  const [edit, setEdit] = useState(\"\");\n  const onIsEdit = () => {\n    setIsEdit(prev => !prev);\n  };\n  const onInputEdit = event => {\n    setEdit(event.target.value);\n  };\n  return Comments.map(comment => /*#__PURE__*/_jsxDEV(S.CommentItem, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uC791\\uC131\\uC790: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: comment.User.nickname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uB313\\uAE00 \\uB0B4\\uC6A9: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: comment.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: isEdit ? /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\uB313\\uAE00\\uC744 \\uC218\\uC815\\uD558\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 20\n      }, this) : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        onStartEdit(comment.id, comment.myComment, comment.content);\n        onIsEdit();\n      },\n      children: \"\\uC218\\uC815\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onRemoveComment(comment.id, comment.myComment),\n      children: \"\\uC0AD\\uC81C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this));\n}\n_s(Comment, \"W49XU9PU7yo8kPjvIZfI/eeDzOQ=\");\n_c = Comment;\nexport default Comment;\nconst CommentItem = styled.li`\n  border: 1px solid #000;\n  margin: 10px;\n`;\nconst S = {\n  CommentItem\n};\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["useState","styled","Comment","Comments","onRemoveComment","onStartEdit","isEdit","setIsEdit","edit","setEdit","onIsEdit","prev","onInputEdit","event","target","value","map","comment","User","nickname","content","id","myComment","CommentItem","li","S"],"sources":["C:/Users/kimmi/OneDrive/바탕 화면/frontJS/hookstest/Hooks/src/components/2.state/comment.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Comment({ Comments, onRemoveComment, onStartEdit }) {\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [edit, setEdit] = useState(\"\");\r\n\r\n  const onIsEdit = () => {\r\n    setIsEdit((prev) => !prev);\r\n  };\r\n\r\n  const onInputEdit = (event) => {\r\n    setEdit(event.target.value);\r\n  };\r\n\r\n  return Comments.map((comment) => (\r\n    <S.CommentItem>\r\n      <p>\r\n        작성자: <span>{comment.User.nickname}</span>\r\n      </p>\r\n      <p>\r\n        댓글 내용: <span>{comment.content}</span>\r\n      </p>\r\n      <p>{isEdit ? <input placeholder=\"댓글을 수정하세요\" /> : \"\"}</p>\r\n      <button\r\n        onClick={() => {\r\n          onStartEdit(comment.id, comment.myComment, comment.content);\r\n          onIsEdit();\r\n        }}\r\n      >\r\n        수정\r\n      </button>\r\n      <button onClick={() => onRemoveComment(comment.id, comment.myComment)}>\r\n        삭제\r\n      </button>\r\n    </S.CommentItem>\r\n  ));\r\n}\r\nexport default Comment;\r\n\r\nconst CommentItem = styled.li`\r\n  border: 1px solid #000;\r\n  margin: 10px;\r\n`;\r\n\r\nconst S = {\r\n  CommentItem,\r\n};\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,mBAAmB;AAAC;AAEvC,SAASC,OAAO,OAA6C;EAAA;EAAA,IAA5C;IAAEC,QAAQ;IAAEC,eAAe;IAAEC;EAAY,CAAC;EACzD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMU,QAAQ,GAAG,MAAM;IACrBH,SAAS,CAAEI,IAAI,IAAK,CAACA,IAAI,CAAC;EAC5B,CAAC;EAED,MAAMC,WAAW,GAAIC,KAAK,IAAK;IAC7BJ,OAAO,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAED,OAAOZ,QAAQ,CAACa,GAAG,CAAEC,OAAO,iBAC1B,QAAC,CAAC,CAAC,WAAW;IAAA,wBACZ;MAAA,WAAG,sBACI;QAAA,UAAOA,OAAO,CAACC,IAAI,CAACC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QACvC,eACJ;MAAA,WAAG,6BACM;QAAA,UAAOF,OAAO,CAACG;MAAO;QAAA;QAAA;QAAA;MAAA,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QACnC,eACJ;MAAA,UAAId,MAAM,gBAAG;QAAO,WAAW,EAAC;MAAW;QAAA;QAAA;QAAA;MAAA,QAAG,GAAG;IAAE;MAAA;MAAA;MAAA;IAAA,QAAK,eACxD;MACE,OAAO,EAAE,MAAM;QACbD,WAAW,CAACY,OAAO,CAACI,EAAE,EAAEJ,OAAO,CAACK,SAAS,EAAEL,OAAO,CAACG,OAAO,CAAC;QAC3DV,QAAQ,EAAE;MACZ,CAAE;MAAA,UACH;IAED;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAQ,OAAO,EAAE,MAAMN,eAAe,CAACa,OAAO,CAACI,EAAE,EAAEJ,OAAO,CAACK,SAAS,CAAE;MAAA,UAAC;IAEvE;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAEZ,CAAC;AACJ;AAAC,GAlCQpB,OAAO;AAAA,KAAPA,OAAO;AAmChB,eAAeA,OAAO;AAEtB,MAAMqB,WAAW,GAAGtB,MAAM,CAACuB,EAAG;AAC9B;AACA;AACA,CAAC;AAED,MAAMC,CAAC,GAAG;EACRF;AACF,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}