{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimmi\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\frontJS\\\\hookstest\\\\Hooks\\\\src\\\\pages\\\\Detail.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport productList from \"../__mock__/products.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DetailPage() {\n  _s();\n  const Review = productList.products.map(product => product.Review);\n  console.log(Review);\n  const params = useParams();\n  const [product, setProduct] = useState();\n  useEffect(() => {\n    // productNumber가 params로 받은 Number가 같은 product를 찾아서,\n    const product = productList.products.find(product => product.productNumber === params.productNumber);\n    // 스테이트로 관리를 해준다.\n    // console.log(product);\n    setProduct(product);\n  }, []);\n  console.log(product);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uC0C1\\uD488\\uC758 \\uBC88\\uD638: \", params.productNumber]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uC0C1\\uD488\\uC758 \\uB9AC\\uBDF0: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(DetailPage, \"FmCZZm0YVHxpVluk3cAhsKvDGlA=\", false, function () {\n  return [useParams];\n});\n_c = DetailPage;\nexport default DetailPage;\nvar _c;\n$RefreshReg$(_c, \"DetailPage\");","map":{"version":3,"names":["useEffect","useState","useParams","productList","DetailPage","Review","products","map","product","console","log","params","setProduct","find","productNumber"],"sources":["C:/Users/kimmi/OneDrive/바탕 화면/frontJS/hookstest/Hooks/src/pages/Detail.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport productList from \"../__mock__/products.json\";\r\n\r\nfunction DetailPage() {\r\n  const Review = productList.products.map((product) => product.Review);\r\n  console.log(Review);\r\n\r\n  const params = useParams();\r\n  const [product, setProduct] = useState();\r\n  useEffect(() => {\r\n    // productNumber가 params로 받은 Number가 같은 product를 찾아서,\r\n    const product = productList.products.find(\r\n      (product) => product.productNumber === params.productNumber\r\n    );\r\n    // 스테이트로 관리를 해준다.\r\n    // console.log(product);\r\n    setProduct(product);\r\n  }, []);\r\n  console.log(product);\r\n\r\n  return (\r\n    <div>\r\n      <p>상품의 번호: {params.productNumber}</p>\r\n      <p>상품의 리뷰: </p>\r\n      {/* \r\n      상세 페이지는 자유롭게 꾸미시면 됩니다.\r\n      아직 해당 부분의 진도가 나가지 않았기 때문에 주소의 파람을 가지고 올 수 있는 방법은\r\n      미리 콘솔에 찍어두었습니다.\r\n\r\n      단, 없는 번호 상품으로 접근 시 state페이지로 돌아가도록 구현해주세요\r\n    */}\r\n    </div>\r\n  );\r\n}\r\nexport default DetailPage;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,WAAW,MAAM,2BAA2B;AAAC;AAEpD,SAASC,UAAU,GAAG;EAAA;EACpB,MAAMC,MAAM,GAAGF,WAAW,CAACG,QAAQ,CAACC,GAAG,CAAEC,OAAO,IAAKA,OAAO,CAACH,MAAM,CAAC;EACpEI,OAAO,CAACC,GAAG,CAACL,MAAM,CAAC;EAEnB,MAAMM,MAAM,GAAGT,SAAS,EAAE;EAC1B,MAAM,CAACM,OAAO,EAAEI,UAAU,CAAC,GAAGX,QAAQ,EAAE;EACxCD,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,OAAO,GAAGL,WAAW,CAACG,QAAQ,CAACO,IAAI,CACtCL,OAAO,IAAKA,OAAO,CAACM,aAAa,KAAKH,MAAM,CAACG,aAAa,CAC5D;IACD;IACA;IACAF,UAAU,CAACJ,OAAO,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EACNC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;EAEpB,oBACE;IAAA,wBACE;MAAA,WAAG,mCAAQ,EAACG,MAAM,CAACG,aAAa;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eACrC;MAAA,UAAG;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAI;EAAA;IAAA;IAAA;IAAA;EAAA,QAQX;AAEV;AAAC,GA9BQV,UAAU;EAAA,QAIFF,SAAS;AAAA;AAAA,KAJjBE,UAAU;AA+BnB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}