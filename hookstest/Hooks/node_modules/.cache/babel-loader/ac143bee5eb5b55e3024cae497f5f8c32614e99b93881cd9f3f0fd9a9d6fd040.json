{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimmi\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\frontJS\\\\hookstest\\\\Hooks\\\\src\\\\hooks\\\\1.basic\\\\q1.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Q1() {\n  _s();\n  /* \r\n    문제1\r\n    useState 및 styled-components에 관련한 문제입니다.\r\n    아래 문제를 통해 어떠한 경우 state를 사용해야하는지 고민하여 풀어보세요\r\n      1-1 )\r\n        문제1-1은 input의 value가 placeholder의 값과 같아졌다면\r\n        초록색 글씨로 올바르게 입력하셨습니다가 노출됩니다.\r\n          만약 입력하지 않았다면 올바르게 글을 작성해주세요라는 문구가\r\n        붉은색 글씨로 노출됩니다\r\n      1-2 )\r\n        문제1-2는 보이기 버튼을 누른다면\r\n          button 내부의 텍스트는 숨기기로 바뀌고\r\n        아래 보이는 p태그가 보여야합니다.\r\n          반대로 숨기기 텍스트로 바뀐 button을 누르면\r\n        p태그는 보이지 않아야합니다\r\n    */\n\n  // 1-1 input 값을 감지하기 위해 useState 함수 사용\n  const [input, setInput] = useState(\"\");\n\n  // 1-1 input 값을 감지하고 초기값이었던 빈 문자열을 setter 함수를 통해 입력된 값으로 input 값 변경\n  const onInputText = e => {\n    setInput(e.target.value);\n  };\n\n  // 1-2 문구를 바꾸기 위해 useState 함수 사용\n  const [show, setShow] = useState(false);\n\n  // 1-2 보이기, 숨기기 버튼에 들어가는 이벤트\n  const onShowText = () => {\n    setShow(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uBB38\\uC81C1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uBB38\\uC81C1-1.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"김성용\",\n        onChange: onInputText,\n        style: {\n          textAlign: \"center\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), input === \"김성용\" ? /*#__PURE__*/_jsxDEV(S.correctMessage, {\n        children: \" \\uC62C\\uBC14\\uB974\\uAC8C \\uC785\\uB825\\uD558\\uC168\\uC2B5\\uB2C8\\uB2E4 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(S.wrongMessage, {\n        children: \"\\uC62C\\uBC14\\uB974\\uAC8C \\uAE00\\uC744 \\uC791\\uC131\\uD574\\uC8FC\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uBB38\\uC81C1-2. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onShowText,\n        children: show ? \"숨기기\" : \"보이기\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: show ? \"이 문구는 보이기 상태일때만 볼 수 있습니다\" : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Q1, \"IO67xogbIHg6w7VkZuQh27FfRxk=\");\n_c = Q1;\nexport default Q1;\nconst correctMessage = styled.p`\n  color: green;\n`;\nconst wrongMessage = styled.p`\n  color: red;\n`;\nconst S = {\n  correctMessage,\n  wrongMessage\n};\nvar _c;\n$RefreshReg$(_c, \"Q1\");","map":{"version":3,"names":["useState","styled","Q1","input","setInput","onInputText","e","target","value","show","setShow","onShowText","prev","textAlign","correctMessage","p","wrongMessage","S"],"sources":["C:/Users/kimmi/OneDrive/바탕 화면/frontJS/hookstest/Hooks/src/hooks/1.basic/q1.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Q1() {\r\n  /* \r\n    문제1\r\n    useState 및 styled-components에 관련한 문제입니다.\r\n    아래 문제를 통해 어떠한 경우 state를 사용해야하는지 고민하여 풀어보세요\r\n\r\n    1-1 )\r\n        문제1-1은 input의 value가 placeholder의 값과 같아졌다면\r\n        초록색 글씨로 올바르게 입력하셨습니다가 노출됩니다.\r\n\r\n        만약 입력하지 않았다면 올바르게 글을 작성해주세요라는 문구가\r\n        붉은색 글씨로 노출됩니다\r\n\r\n    1-2 )\r\n        문제1-2는 보이기 버튼을 누른다면\r\n\r\n        button 내부의 텍스트는 숨기기로 바뀌고\r\n        아래 보이는 p태그가 보여야합니다.\r\n\r\n        반대로 숨기기 텍스트로 바뀐 button을 누르면\r\n        p태그는 보이지 않아야합니다\r\n\r\n  */\r\n\r\n  // 1-1 input 값을 감지하기 위해 useState 함수 사용\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  // 1-1 input 값을 감지하고 초기값이었던 빈 문자열을 setter 함수를 통해 입력된 값으로 input 값 변경\r\n  const onInputText = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  // 1-2 문구를 바꾸기 위해 useState 함수 사용\r\n  const [show, setShow] = useState(false);\r\n\r\n  // 1-2 보이기, 숨기기 버튼에 들어가는 이벤트\r\n  const onShowText = () => {\r\n    setShow((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>문제1</h1>\r\n      <div>\r\n        <h2>문제1-1.</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder={\"김성용\"}\r\n          onChange={onInputText}\r\n          style={{ textAlign: \"center\" }}\r\n        />\r\n        {input === \"김성용\" ? (\r\n          <S.correctMessage> 올바르게 입력하셨습니다 </S.correctMessage>\r\n        ) : (\r\n          <S.wrongMessage>올바르게 글을 작성해주세요</S.wrongMessage>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <h2>문제1-2. </h2>\r\n        <button onClick={onShowText}>{show ? \"숨기기\" : \"보이기\"}</button>\r\n        <p>{show ? \"이 문구는 보이기 상태일때만 볼 수 있습니다\" : \"\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default Q1;\r\n\r\nconst correctMessage = styled.p`\r\n  color: green;\r\n`;\r\n\r\nconst wrongMessage = styled.p`\r\n  color: red;\r\n`;\r\n\r\nconst S = {\r\n  correctMessage,\r\n  wrongMessage,\r\n};\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,mBAAmB;AAAC;AAAA;AAEvC,SAASC,EAAE,GAAG;EAAA;EACZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAQE;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMK,WAAW,GAAIC,CAAC,IAAK;IACzBF,QAAQ,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC1B,CAAC;;EAED;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;;EAEvC;EACA,MAAMW,UAAU,GAAG,MAAM;IACvBD,OAAO,CAAEE,IAAI,IAAK,CAACA,IAAI,CAAC;EAC1B,CAAC;EAED,oBACE;IAAA,wBACE;MAAA,UAAI;IAAG;MAAA;MAAA;MAAA;IAAA,QAAK,eACZ;MAAA,wBACE;QAAA,UAAI;MAAM;QAAA;QAAA;QAAA;MAAA,QAAK,eACf;QACE,IAAI,EAAC,MAAM;QACX,WAAW,EAAE,KAAM;QACnB,QAAQ,EAAEP,WAAY;QACtB,KAAK,EAAE;UAAEQ,SAAS,EAAE;QAAS;MAAE;QAAA;QAAA;QAAA;MAAA,QAC/B,EACDV,KAAK,KAAK,KAAK,gBACd,QAAC,CAAC,CAAC,cAAc;QAAA,UAAC;MAAc;QAAA;QAAA;QAAA;MAAA,QAAmB,gBAEnD,QAAC,CAAC,CAAC,YAAY;QAAA,UAAC;MAAc;QAAA;QAAA;QAAA;MAAA,QAC/B;IAAA;MAAA;MAAA;MAAA;IAAA,QACG,eAEN;MAAA,wBACE;QAAA,UAAI;MAAO;QAAA;QAAA;QAAA;MAAA,QAAK,eAChB;QAAQ,OAAO,EAAEQ,UAAW;QAAA,UAAEF,IAAI,GAAG,KAAK,GAAG;MAAK;QAAA;QAAA;QAAA;MAAA,QAAU,eAC5D;QAAA,UAAIA,IAAI,GAAG,0BAA0B,GAAG;MAAE;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAC3C;EAAA,gBACL;AAEP;AAAC,GAjEQP,EAAE;AAAA,KAAFA,EAAE;AAkEX,eAAeA,EAAE;AAEjB,MAAMY,cAAc,GAAGb,MAAM,CAACc,CAAE;AAChC;AACA,CAAC;AAED,MAAMC,YAAY,GAAGf,MAAM,CAACc,CAAE;AAC9B;AACA,CAAC;AAED,MAAME,CAAC,GAAG;EACRH,cAAc;EACdE;AACF,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}