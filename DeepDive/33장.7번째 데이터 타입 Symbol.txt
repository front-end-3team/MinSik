33.1 심벌이란?

    ES6에서 도입된 7번째 데이터 타입으로 변경 불가능한 원시 타입 값이다
    => 다른 값과 중복되지 않는 유일한 값으로 주로 이름의 충돌 위험이 없는 유일한 프로퍼티 키를 만들기 위해 사용한다

33.2 심벌 값의 생성

    (1) Symbol 함수
        다른 원시값과 달리 Symbol 함수를 호출하여 생성해야 하며 new 연산자가 필요 없고 생성자 함수가 아니다
        => 암묵적으로 래퍼 객체를 생성하고 불리언 타입만으로만 암묵적 타입 변환이 가능하다
    
    (2) Symbol.for / Symbol.keyFor 메서드
        Symbol.for 메서드는 인수로 전달받은 문자열을 키로 사용하여 전역 심벌 레지스트리에서 해당 키와 일치하는 심벌 값을 검색한다
        Symbol.keyFor 메서드로 전역 심벌 레지스트리에 저장된 심벌 값의 키를 추출할 수 있다

33.3 심벌과 상수

    상수 자체보단 상수 이름만 의미가 있을 경우 무의미한 상수 대신 심벌 값을 사용하자

33.4 심벌과 프로퍼티 키

    동적으로도 생성할 수 있고 []을 사용하여 생성/추가하거나 참조를 할 수 있다

33.5 심벌과 프로퍼티 은닉

    Object.getOwnPropertySymbols 메서드 사용을 제외한다면 참조가 불가능하다

33.6 심벌과 표준 빌트인 객체 확장

    표준 빌트인 객체는 읽기 전용으로만 사용하자
    => 굳이 사용자 정의 메서드를 표준 빌트인 객체에 추가하려면 심벌 값을 사용하지만 권장하지 않는다

33.7 Well-known Symbol

    자바스크립트가 기본으로 제공하는 빌트인 심벌 값이다