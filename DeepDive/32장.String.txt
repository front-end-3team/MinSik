32.1 String 생성자 함수

    new 연산자와 함께 호출하여 인스턴스를 생성할 수도 new 연산자가 없다면 인수를 강제 변환 후 객체를 생성한다
    => 객체를 생성할 시 String 래퍼 객체를 생성한다
    => 인덱스를 나타내는 숫자 형식의 문자열을 프로퍼티 키로, 각 문자를 프로퍼티 값으로 갖는 유사 배열 객체이면서 이터러블이다

32.2 length 프로퍼티

    String 래퍼 객체이므로 length 프로퍼티를 가지며 문자열의 문자 개수를 반환한다

32.3 String 메서드

    String 래퍼 객체는 문자열이 변경 불가능한 원시 값이기에 읽기 전용 객체로 제공된다
    => 항상 새로운 문자열을 생성하여 반환한다

    (1) String.prototype.indexOf
        대상 문자열에 인수로 전달받은 문자열을 검색하여 첫 번째 인덱스를 반환한다
        => 실패하면 -1을 반환하고 2번째 인수로 검색을 시작할 인덱스를 전달할 수 있다
        => includes 메서드로 대체 가능하다

    (2) String.prototype.search
        대상 문자열에서 인수로 전달받은 정규 표현식과 매치하는 문자열을 검색한 뒤 일치하는 문자열의 인덱스를 반환, 없으면 -1을 반환한다
    
    (3) String.prototype.includes
        인수로 전달받은 문자열이 포함되어 있는지 불리언 값을 반환한다
        => 두 번째 인수로 검색을 시작할 인덱스를 전달할 수 있다

    (4) String.prototype.startsWith
        대상 문자열이 인수로 전달받은 문자열로 시작하는지 확인하여 불리언 값으로 반환한다
    
    (5) String.prototype.endsWith
        대상 문자열이 인수로 전달받은 문자열로 끝나는지 확인하여 불리언 값으로 반환한다
    
    (6) String.prototype.charAt
        대상 문자열에서 인수로 전달받은 인덱스에 위치한 문자를 검색하여 반환한다

    (7) String.prototype.substring
        대상 문자열에서 첫 번째 인수로 전달받은 인덱스에 위치하는 문자부터 두 번째 인수로 전달받은 인덱스에
        위치하는 문자의 바로 이전 문자까지의 부분 문자열을 반환한다
    
    (8) String.prototype.slice
        substring 메서드와 동일하게 동작하면서 인수로 음수까지 받을 수 있다
    
    (9) String.prototype.toUpperCase
        모두 대문자로 변경한 문자열을 반환한다
    
    (10) String.prototype.toLowerCase
        모두 소문자로 변경한 문자열을 반환한다
    
    (11) String.prototype.trim
        대상 문자열 앞뒤에 공백 문자가 있을 경우 이를 제거한 문자열을 반환한다

    
    (12) String.prototype.repeat
        대상 문자열을 인수로 전달받은 정수만큼 반복해 연결한 새로운 문자열을 반환한다

    (13) String.prototype.replace
        대상 문자열에서 첫 번째 인수로 전달받은 문자열 또는 정규 표현식을 검색하여 두 번째 인수로 전달한 문자열로 치환하여 반환한다

    (14) String.prototype.split
        대상 문자열에서 첫 번째 인수로 전달한 문자열 또는 정규 표현식을 검색하여 문자열을 구분한 뒤 분리된 각 문자열로 이루어진 배열을 반환한다