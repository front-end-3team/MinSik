17.1 Object 생성자 함수

    new 연산자를 사용하여 빈 객체 생성 후 프로퍼티, 메서드를 추가할 수 있다
    => 생성자 함수에 생성된 객체를 인스턴스라 한다
    => Object 이외에도 String, Number, Boolean 등 다양한 빌트인 함수가 존재한다

17.2 생성자 함수

    (1) 객체 리터럴에 의한 객체 생성 방식의 문제점
        단 하나의 객체만 생성한다
        => 동일한 프로퍼티를 갖는 객체를 여러 개 생성해야 하는 경우 효율이 떨어진다

        객체는 프로퍼티를 통해 객체 고유의 상태를 표현한다
        => 객체마다 프로퍼티 값이 다를 수 있다

        메서드를 통해 상태 데이터인 프로퍼티를 참조하고 조작하는 동작을 표현한다
        => 메서드는 내용이 동일한 경우가 일반적이다

    (2) 생성자 함수에 의한 객체 생성 방식의 장점
        객체(인스턴스)를 생성하기 위한 템플릿(클래스)처럼 생성자 함수를 사용한다면
        => 프로퍼티 구조가 동일한 객체 여러 개를 간편하게 생성할 수 있다

    * this
        객체 자신의 프로퍼티나 메서드를 참조하기 위한 자기 참조 변수
        => 함수 호출 방식에 따라 동적으로 값이 결정된다

        일반 함수로서 호출       =>   전역 객체
        메서드로서 호출          =>   메서드를 호출한 객체(마침표 앞의 객체)
        생성자 함수로서 호출     =>   생성자 함수가 생성할 인스턴스 

    new 연산자와 함께 호출하지 않는다면 생성자 함수가 아니라 일반 함수로 동작한다!!

    (3) 생성자 함수의 인스턴스 생성 과정
        생성자 함수의 역할은 인스턴스를 생성하고 생성된 인스턴스는 초기화시키는 것이다
        => 인스턴스 생성은 필수, 인스턴스 초기화는 옵션 

        // 생성자 함수
        function Circle(radius) {
            // 인스턴스 초기화
            this.radius = radius;
            this.getDiameter = function () {
                return 2 * this.radius;
            };
        }
        // 인스턴스 생성
        const circle1 = new Circle(5); 

        자바스크립트 엔진은 암묵적으로 인스턴스를 생성하고 초기화한 후 반환한다
        => 명시적을 this가 아닌 다른 값을 반환하면 생성자 함수의 기본 동작을 훼손하므로 return 문은 반드시 생략!!

    (4) 내부 메서드 [[Call]]과 [[Construct]]
        함수 선언문 또는 함수 표현식으로 정의한 함수는 생성자 함수로도 호출할 수 있다
        => 내부 슬롯과 내부 메서드를 호출할 수 있다

        모든 함수는 내부 메서드 [[Call]]을 갖고 callable이라 한다
        => 내부 메서드 [[Construct]]를 갖는 함수 객체를 constructor라고 한다
        => [[Construct]]를 갖지 않으면 non-constructor라고 한다

    (5) constructor와 non-constructor의 구분
        constructor: 함수 선언문, 함수 표현식, 클래스
        non-constructor: 메서드(ES6 메서드 축약 표현), 화살표 함수

    (6) new 연산자
        new 연산자와 함께 호출하는 함수는 constructor이어야 한다
        => 내부 메서드 [[Call]]이 호출된다

    (7) new.target
        생성자 함수가 new 연산자 없이 호출되는 것을 막기 위해 new.target을 지원
        => new.targetdms 호출된 함수 자신을 가리킨다

    Object, Function 생성자 함수는 new 연산자 없이 호출되어도 동일 작동
    그러나 String, Number, Boolean 생성자 함수는 new 연산자 없이 호출된다면 데이터 타입을 변환하여 반환

