13.1 스코프란?

    모든 식별자(변수, 함수, 클래스 등등)이 유효한 범위를 말한다
    렉시컬 환경(코드가 어디서 실행되고 주변에 어떤 코드가 있는지 말하는 환경)으로,
    코드의 문맥을 고려하여 스코프가 정해진다

    식별자는 어떤 값을 구별하는 것이기에 유일해야 한다!!
    => 중복 절대 불가!!

13.2 스코프의 종류

    (1) 전역과 전역 스코프
        전역: 말 그대로 가장 바깥 구역, 모든 구역
        전역 변수: 어디서든지 참조 가능

    (2) 지역과 지역 스코프
        지역: 함수 내부
        지역 스코프: 자신 또는 하위 지역에서만 유효

13.3 스코프 체인

    스코프가 함수의 중첩에 의해 체인처럼 연쇄된 구조
    => 상위로 이동하면서 검색
    
    (1) 스코프 체인에 의한 변수 검색
        참조는 상위 스코프에서만 가능
        
    (2) 스코프 체인에 의한 함수 검색
        식별자를 먼저 검색하여 평가
        => 호이스팅 발생

13.4 함수 레벨 스코프

    코드 블록이 아닌 함수에 의해서만 지역 스코프가 생성
    => 블록 레벨 스코프(함수뿐만 아니라 모든 코드 블록)

    단, var 키워드는 함수만을 지역 스코프로 인정
    => 함수 레벨 스코프

13.5 렉시컬 스코프

    상위 스코프가 결정되는 조건
        1. 함수가 호출된 위치 => 동적 스코프
        2. 함수가 정의된 위치 => 정적 스코프/렉시컬 스코프

    자바스크립트는 렉시컬 스코프!!
    => 함수가 정의된 위치에 따라 상위 스코프를 결정
    => 함수의 상위 스코프는 언제나 자신이 정의된 스코프 자체!!