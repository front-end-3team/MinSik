14.1 변수의 생명 주기

    (1) 지역 변수의 생명 주기
        전역 변수는 애플리케이션의 생명 주기와 같고,
        지역 변수는 함수의 생명 주기와 같다

    (2) 전역 변수의 생명 주기
        전역 변수, 전역 객체 모두 코드 실행 이전에 생성되어 종료될 때까지 유효
        전역 객체: 표준 빌트인, 환경에 따른 호스트 객체 등

14.2 전역 변수의 문제점

    암묵적 결함: 어디서든 참조하고 할당이 가능 => 코드의 가독성 ↓
    긴 생명 주기: 메모리 소모 ↑
    스코프 체인 상에서 종점이 존재: 검색 속도가 가장 느리다
    네임스페이스 오염

14.3 전역 변수의 사용을 억제하는 방법

    (1) 즉시 실행 함수
        모든 코드를 즉시 실행 함수로 감싸면 모든 변수는 즉시 실행 함수의 지역 변수가 된다
        => 라이브러리에도 자주 사용된다

    (2) 네임스페이스 객체
        효율성 ↓

    (3) 모듈 패턴
        클로저를 기반으로 동작
        캡슐화: 정보 은닉이라고도 하며 프로퍼티를 참조하고 조작하는 메서드를 하나로 묶는 것

    (4) ES6 모듈
        파일 자체의 독자적인 모듈 스코프를 제공